
@mixin respond($breakpoint) {
  
  // Really small phones
  @if $breakpoint == phone {
    @media (max-width: $screen-sm-min) {
      @content;
    }
  }

  // Phones
  @if $breakpoint == phone-medium {
    @media (max-width: $screen-sm-mid) {
      @content;
    }
  }

  // Large phones and phones in portrait mode
  @if $breakpoint == phone-large {
    @media (max-width: $screen-sm-lg) {
      @content;
    }
  }

  // Tabs
  @if $breakpoint == tab {
    @media (max-width: $screen-mid) {
      @content;
    }
  }

  // Normal sized laptops/monitor
  @if $breakpoint == monitor {
    @media (max-width: $screen-lg) {
      @content;
    }
  }

  // Normal sized laptops/monitor
  @if $breakpoint == monitor {
    @media (max-width: $screen-xl) {
      @content;
    }
  }
}

@mixin respond-custom($breakpoint) {
  @media (max-width: $breakpoint) {
    @content;
  }
}

@mixin form {
   .form {
      height: 70.8rem;
      width: 47.2rem;
      margin: 0 auto;
      box-shadow: 0px 3px 6px #00000029;
      padding: 3rem;
      padding-top: 2rem;
      background-color: #fff;
      display: flex;
      flex-direction: column;
  
      @include respond(phone-large) {
        height: max-content;
        width: 95%;
        margin: 0 auto;
      }
  
      .imageContainer {
        flex: 0 0 55px;
        padding: 5px 0;
        text-align: center;
  
        .image {
          padding: 0;
          width: 90px;
          height: 40px;
        }
      }
  
      .inputContainer {
        display: flex;
        flex-direction: column;
        flex-wrap: wrap;
        flex: 0 0 500px;
        margin: 0 auto;
  
        label {
        flex: 0 0 8.6rem;
        margin: 2px 0;
    
        span {
          display: block;
          padding: 0 1rem;
          background-color: #fff;
          font-size: 1.35rem;
          color: #9e9d9d;
          line-height: 2.4rem;
          position: relative;
          left: 3rem;
          top: 1rem;
          width: max-content;
        }
    
        input, select {
          width: 39.5rem;
          height: 3.7rem;
          border-radius: 5px;
          border: 1px solid #afafaf;
          color: #707070;
          font-family: inherit;
          padding: 0 6px;
  
          @include respond(phone-large) {
            width: 100%;
            height: 3.3;
          }
        }
  
        option {
          color: #707070;
        }
  
        input:disabled {
          background-color: #fff;
        }
  
        .transparent {
          color: #70707069;
        }
  
        .opaque {
          color: #707070;
        }
  
        div {
          position: relative;
          bottom: 20%;
          left: 20px;
          z-index: 5;
        }
  
        .validationErrorText {
          font-size: 1.25rem;
          padding-top: 4px;
          color: rgba(255, 0, 0, 0.719);
        }
      }
    }
    
      button {
        font-family: 'Lato', sans-serif;
        width: 39.5rem;
        margin: 0 auto;
        margin-top: 2rem;
        font-size: 1.4rem;
        outline: 0;
        border: 0;
        height: 4rem;
        border-radius: 1rem;
        color: #fff;
        box-shadow: 3px 3px 6px #00000029;
        background: transparent 
        linear-gradient(90deg, #11998E 0%, #38EF7D 100%) 
        0% 0% no-repeat padding-box;
  
        @include respond(phone-large) {
          width: 100%;
          height: 3.3;
        }
    
        &:active {
          transform: translateY(3%);
          box-shadow: 1px 1px 4px #00000029;
        }
      }
  
      button:disabled {
        visibility: hidden;
      }
    }
  }