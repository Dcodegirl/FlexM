{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\flexiMoney-web-app\\\\src\\\\features\\\\services\\\\cable\\\\index.js\";\nimport React, { useState, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport RechargeCableReducer, { initialFormState } from './cable-reducer';\nimport { setCurrentPage } from '../../../actions/page';\nimport { VEND_STARTIMES, VEND_MULTICHOICE } from '../../../utils/constants';\nimport RechargeCableForm from './RechargeCableForm';\nimport RechargeCableStatus from './RechargeCableStatus';\nimport RechargeCableSummary from './RechargeCableSummary';\nimport FailedTransaction from '../../../components/common/FailedTransaction';\nimport { useToasts } from 'react-toast-notifications';\nexport const RechargeCable = ({\n  service,\n  hasSetPin\n}) => {\n  const TRANSACTION_COST = 0;\n  let renderedComponent;\n  const [componentToRender, setComponentToRender] = useState('form');\n  const [RechargeCableFormState, dispatch] = useReducer(RechargeCableReducer, initialFormState);\n  const [successData, setSuccessData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const {\n    addToast\n  } = useToasts();\n  const [failedErrorMessage, setFailedErrorMessage] = useState('');\n  const getTransactionDate = date => {\n    const dateString = date.toLocaleDateString();\n    return dateString.slice(0, 24);\n  };\n  const handleOnSubmit = () => {\n    setLoading(true);\n    let providerApi;\n    let payload;\n    const {\n      smartCardNumber,\n      amount,\n      selectedPlanCode,\n      cycle,\n      phone,\n      transaction_pin\n    } = RechargeCableFormState;\n    if (service === 'dstv' || service === 'gotv') {\n      providerApi = VEND_MULTICHOICE;\n      payload = {\n        smartcard: smartCardNumber,\n        amount,\n        phone,\n        code: selectedPlanCode,\n        type: service,\n        validity: cycle,\n        transaction_pin: transaction_pin\n      };\n    } else if (service === 'startimes') {\n      providerApi = VEND_STARTIMES;\n      payload = {\n        smartcard: smartCardNumber,\n        amount,\n        phone,\n        code: selectedPlanCode,\n        type: service,\n        validity: cycle,\n        transaction_pin: transaction_pin\n      };\n    }\n    (async function vendCable() {\n      try {\n        const res = await axios.post(providerApi, payload);\n        const successData = res.data.data;\n        const message = res.data.data.message;\n        const date = new Date();\n        const transactionDate = getTransactionDate(date);\n        setLoading(false);\n        setSuccessData({\n          ...successData,\n          date: transactionDate\n        });\n        addToast(message, {\n          appearance: 'success',\n          autoDismiss: true\n        });\n        setComponentToRender('success');\n      } catch (e) {\n        setLoading(false);\n        addToast(e.response.data.data, {\n          appearance: 'error',\n          autoDismissTimeout: 3000\n        });\n        setFailedErrorMessage(e.response.data.message || undefined);\n        setComponentToRender('failed');\n      }\n    })();\n  };\n  switch (componentToRender) {\n    case 'form':\n      renderedComponent = /*#__PURE__*/React.createElement(RechargeCableForm, {\n        service: service,\n        RechargeCableFormState: RechargeCableFormState,\n        setFormState: dispatch,\n        setComponentToRender: setComponentToRender,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      });\n      break;\n    case 'summary':\n      renderedComponent = /*#__PURE__*/React.createElement(RechargeCableSummary, {\n        RechargeCableFormState: RechargeCableFormState,\n        loading: loading,\n        handleOnSubmit: handleOnSubmit,\n        transactionCost: TRANSACTION_COST,\n        service: service,\n        dispatch: dispatch,\n        hasSetPin: hasSetPin,\n        setComponentToRender: setComponentToRender,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      });\n      break;\n    case 'success':\n      renderedComponent = /*#__PURE__*/React.createElement(RechargeCableStatus, {\n        successData: successData,\n        formState: RechargeCableFormState,\n        setComponentToRender: setComponentToRender,\n        transactionCost: TRANSACTION_COST,\n        service: service,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      });\n      break;\n    case 'failed':\n      renderedComponent = /*#__PURE__*/React.createElement(FailedTransaction, {\n        message: failedErrorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      });\n      break;\n    default:\n      renderedComponent = null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderedComponent);\n};\nconst mapStateToProps = state => {\n  return {\n    service: state.modal.service,\n    hasSetPin: state.auth.user.hasSetPin\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeCurrentPage: payload => dispatch(setCurrentPage(payload))\n  };\n};\nRechargeCable.propTypes = {\n  changeCurrentPage: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(RechargeCable);","map":{"version":3,"names":["React","useState","useReducer","PropTypes","connect","axios","RechargeCableReducer","initialFormState","setCurrentPage","VEND_STARTIMES","VEND_MULTICHOICE","RechargeCableForm","RechargeCableStatus","RechargeCableSummary","FailedTransaction","useToasts","RechargeCable","service","hasSetPin","TRANSACTION_COST","renderedComponent","componentToRender","setComponentToRender","RechargeCableFormState","dispatch","successData","setSuccessData","loading","setLoading","addToast","failedErrorMessage","setFailedErrorMessage","getTransactionDate","date","dateString","toLocaleDateString","slice","handleOnSubmit","providerApi","payload","smartCardNumber","amount","selectedPlanCode","cycle","phone","transaction_pin","smartcard","code","type","validity","vendCable","res","post","data","message","Date","transactionDate","appearance","autoDismiss","e","response","autoDismissTimeout","undefined","createElement","setFormState","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","transactionCost","formState","Fragment","mapStateToProps","state","modal","auth","user","mapDispatchToProps","changeCurrentPage","propTypes","func","isRequired"],"sources":["C:/Users/USER/Documents/flexiMoney-web-app/src/features/services/cable/index.js"],"sourcesContent":["import React, { useState, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport RechargeCableReducer, { initialFormState } from './cable-reducer';\r\nimport { setCurrentPage } from '../../../actions/page';\r\nimport { VEND_STARTIMES, VEND_MULTICHOICE } from '../../../utils/constants';\r\nimport RechargeCableForm from './RechargeCableForm';\r\nimport RechargeCableStatus from './RechargeCableStatus';\r\nimport RechargeCableSummary from './RechargeCableSummary';\r\nimport FailedTransaction from '../../../components/common/FailedTransaction';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nexport const RechargeCable = ({ service, hasSetPin }) => {\r\n    const TRANSACTION_COST = 0;\r\n    let renderedComponent;\r\n    const [componentToRender, setComponentToRender] = useState('form');\r\n    const [RechargeCableFormState, dispatch] = useReducer(\r\n        RechargeCableReducer,\r\n        initialFormState\r\n    );\r\n    const [successData, setSuccessData] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const { addToast } = useToasts();\r\n    const [failedErrorMessage, setFailedErrorMessage] = useState('');\r\n\r\n    const getTransactionDate = (date) => {\r\n        const dateString = date.toLocaleDateString();\r\n        return dateString.slice(0, 24);\r\n    };\r\n\r\n    const handleOnSubmit = () => {\r\n        setLoading(true);\r\n\r\n        let providerApi;\r\n        let payload;\r\n        const { smartCardNumber, amount, selectedPlanCode, cycle, phone, transaction_pin } =\r\n            RechargeCableFormState;\r\n\r\n        if (service === 'dstv' || service === 'gotv') {\r\n            providerApi = VEND_MULTICHOICE;\r\n            payload = {\r\n                smartcard: smartCardNumber,\r\n                amount,\r\n                phone,\r\n                code: selectedPlanCode,\r\n                type: service,\r\n                validity: cycle,\r\n                transaction_pin:transaction_pin,\r\n            };\r\n        } else if (service === 'startimes') {\r\n            providerApi = VEND_STARTIMES;\r\n            payload = {\r\n                smartcard: smartCardNumber,\r\n                amount,\r\n                phone,\r\n                code: selectedPlanCode,\r\n                type: service,\r\n                validity: cycle,\r\n                transaction_pin:transaction_pin,\r\n            };\r\n        }\r\n\r\n        (async function vendCable() {\r\n            try {\r\n                const res = await axios.post(providerApi, payload);\r\n                const successData = res.data.data;\r\n                const message = res.data.data.message;\r\n                const date = new Date();\r\n                const transactionDate = getTransactionDate(date);\r\n\r\n                setLoading(false);\r\n                setSuccessData({ ...successData, date: transactionDate });\r\n                addToast(message, {\r\n                    appearance: 'success',\r\n                    autoDismiss: true, \r\n                });\r\n                setComponentToRender('success');\r\n            } catch (e) {\r\n                setLoading(false);\r\n                addToast(e.response.data.data, {\r\n                    appearance: 'error',\r\n                                        autoDismissTimeout: 3000\r\n                });\r\n                setFailedErrorMessage(e.response.data.message || undefined);\r\n                setComponentToRender('failed');\r\n            }\r\n        })();\r\n    };\r\n\r\n    switch (componentToRender) {\r\n        case 'form':\r\n            renderedComponent = (\r\n                <RechargeCableForm\r\n                    service={service}\r\n                    RechargeCableFormState={RechargeCableFormState}\r\n                    setFormState={dispatch}\r\n                    setComponentToRender={setComponentToRender}\r\n                />\r\n            );\r\n            break;\r\n        case 'summary':\r\n            renderedComponent = (\r\n                <RechargeCableSummary\r\n                    RechargeCableFormState={RechargeCableFormState}\r\n                    loading={loading}\r\n                    handleOnSubmit={handleOnSubmit}\r\n                    transactionCost={TRANSACTION_COST}\r\n                    service={service}\r\n                    dispatch={dispatch}\r\n                    hasSetPin={hasSetPin}\r\n                    setComponentToRender={setComponentToRender}\r\n                />\r\n            );\r\n            break;\r\n        case 'success':\r\n            renderedComponent = (\r\n                <RechargeCableStatus\r\n                    successData={successData}\r\n                    formState={RechargeCableFormState}\r\n                    setComponentToRender={setComponentToRender}\r\n                    transactionCost={TRANSACTION_COST}\r\n                    service={service}\r\n                />\r\n            );\r\n            break;\r\n        case 'failed':\r\n            renderedComponent = (\r\n                <FailedTransaction message={failedErrorMessage} />\r\n            );\r\n            break;\r\n        default:\r\n            renderedComponent = null;\r\n    }\r\n\r\n    return <>{renderedComponent}</>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        service: state.modal.service,\r\n        hasSetPin: state.auth.user.hasSetPin,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeCurrentPage: (payload) => dispatch(setCurrentPage(payload)),\r\n    };\r\n};\r\n\r\nRechargeCable.propTypes = {\r\n    changeCurrentPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RechargeCable);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}