{"ast":null,"code":"import axios from '../utils/axiosInstance';\nimport history from '../utils/history';\nimport setAuthToken from '../utils/setAuthToken';\nimport { useToasts } from 'react-toast-notifications';\nconst LOGIN_API = '/users/signin';\nconst OTP_VERIFICATION_API = '/user/otpVer';\nconst START_LOGIN_USER = 'START_LOGIN_USER';\nconst LOGOUT_USER = 'LOGOUT_USER';\nconst loginUser = userData => ({\n  type: START_LOGIN_USER,\n  payload: userData\n});\nconst logoutUser = () => ({\n  type: LOGOUT_USER\n});\nexport const startLoginUser = (payload, history) => async dispatch => {\n  const {\n    addToast\n  } = useToasts(); // Import the hook\n\n  try {\n    const response = await axios.post(OTP_VERIFICATION_API, payload);\n    const {\n      data\n    } = response;\n    const token = data.data.token;\n    sessionStorage.setItem('token', token);\n    if (token) {\n      sessionStorage.setItem('isAuthenticated', true);\n      const authDetails = {\n        isAuthenticated: true,\n        user: {\n          ...data.data.user_info\n        },\n        bank: {\n          ...data.data.bank_info\n        },\n        has_pin: data.data.has_pin,\n        image: data.data.image\n      };\n      setAuthToken(token);\n      dispatch(loginUser(authDetails));\n      sessionStorage.setItem('user', JSON.stringify(authDetails));\n      history.replace('/overview');\n      window.location.reload();\n    }\n  } catch (error) {\n    // Handle login error\n    console.error('Login error:', error);\n\n    // Display error toast based on status\n    const {\n      status,\n      data\n    } = error.response;\n    if (status === 400 || status === 404 || status === 422) {\n      // Bad Request (400)\n      if (data && data.errors) {\n        Object.values(data.errors).flat().forEach(errorMessage => {\n          addToast(`${errorMessage}`, {\n            appearance: 'error',\n            autoDismiss: true,\n            autoDismissTimeout: 3000\n          });\n        });\n      } else if (status && data && data.message) {\n        addToast(`${data.message}`, {\n          appearance: 'error',\n          autoDismiss: true,\n          autoDismissTimeout: 3000\n        });\n      } else {\n        addToast('Bad Request. Please check your input.', {\n          appearance: 'error',\n          autoDismiss: true,\n          autoDismissTimeout: 3000\n        });\n      }\n    } else if (status === 500) {\n      // Internal Server Error (500)\n      addToast('Internal Server Error. Please try again later.', {\n        appearance: 'error',\n        autoDismiss: true,\n        autoDismissTimeout: 3000\n      });\n    } else {\n      // Display an error toast with the API response message for other status codes\n      addToast(data.message || 'An unexpected error occurred.', {\n        appearance: 'error',\n        autoDismiss: true,\n        autoDismissTimeout: 3000\n      });\n    }\n  }\n};\nexport const startLogout = () => dispatch => {\n  dispatch({\n    type: 'SET_LOADING',\n    payload: {\n      loading: false,\n      message: undefined\n    }\n  });\n  sessionStorage.clear('user');\n  sessionStorage.clear('token');\n  sessionStorage.clear('balance');\n  history.push('/');\n  dispatch(logoutUser());\n};","map":{"version":3,"names":["axios","history","setAuthToken","useToasts","LOGIN_API","OTP_VERIFICATION_API","START_LOGIN_USER","LOGOUT_USER","loginUser","userData","type","payload","logoutUser","startLoginUser","dispatch","addToast","response","post","data","token","sessionStorage","setItem","authDetails","isAuthenticated","user","user_info","bank","bank_info","has_pin","image","JSON","stringify","replace","window","location","reload","error","console","status","errors","Object","values","flat","forEach","errorMessage","appearance","autoDismiss","autoDismissTimeout","message","startLogout","loading","undefined","clear","push"],"sources":["C:/Users/USER/Documents/flexiMoney-web-app/src/actions/auth2.js"],"sourcesContent":["import axios from '../utils/axiosInstance';\r\nimport history from '../utils/history';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\nconst LOGIN_API = '/users/signin';\r\nconst OTP_VERIFICATION_API = '/user/otpVer';\r\n\r\nconst START_LOGIN_USER = 'START_LOGIN_USER';\r\nconst LOGOUT_USER = 'LOGOUT_USER';\r\n\r\nconst loginUser = (userData) => ({\r\n  type: START_LOGIN_USER,\r\n  payload: userData,\r\n});\r\n\r\nconst logoutUser = () => ({\r\n  type: LOGOUT_USER,\r\n});\r\n\r\nexport const startLoginUser = (payload, history) => async (dispatch) => {\r\n  const { addToast } = useToasts(); // Import the hook\r\n\r\n  try {\r\n    const response = await axios.post(OTP_VERIFICATION_API, payload);\r\n    const { data } = response;\r\n    const token = data.data.token;\r\n    sessionStorage.setItem('token', token);\r\n\r\n    if (token) {\r\n      sessionStorage.setItem('isAuthenticated', true);\r\n      const authDetails = {\r\n        isAuthenticated: true,\r\n        user: { ...data.data.user_info },\r\n        bank: { ...data.data.bank_info },\r\n        has_pin: data.data.has_pin,\r\n        image: data.data.image,\r\n      };\r\n\r\n      setAuthToken(token);\r\n      dispatch(loginUser(authDetails));\r\n      sessionStorage.setItem('user', JSON.stringify(authDetails));\r\n      history.replace('/overview');\r\n      window.location.reload();\r\n    }\r\n  } catch (error) {\r\n    // Handle login error\r\n    console.error('Login error:', error);\r\n\r\n    // Display error toast based on status\r\n    const { status, data } = error.response;\r\n\r\n    if (status === 400 || status === 404 || status === 422) {\r\n      // Bad Request (400)\r\n      if (data && data.errors) {\r\n        Object.values(data.errors).flat().forEach(errorMessage => {\r\n          addToast(`${errorMessage}`, {\r\n            appearance: 'error',\r\n            autoDismiss: true,\r\n            autoDismissTimeout: 3000,\r\n          });\r\n        });\r\n      } else if (status && data && data.message) {\r\n        addToast(`${data.message}`, {\r\n          appearance: 'error',\r\n          autoDismiss: true,\r\n          autoDismissTimeout: 3000,\r\n        });\r\n      } else {\r\n        addToast('Bad Request. Please check your input.', {\r\n          appearance: 'error',\r\n          autoDismiss: true,\r\n          autoDismissTimeout: 3000,\r\n        });\r\n      }\r\n    } else if (status === 500) {\r\n      // Internal Server Error (500)\r\n      addToast('Internal Server Error. Please try again later.', {\r\n        appearance: 'error',\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 3000,\r\n      });\r\n    } else {\r\n      // Display an error toast with the API response message for other status codes\r\n      addToast(data.message || 'An unexpected error occurred.', {\r\n        appearance: 'error',\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 3000,\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const startLogout = () => (dispatch) => {\r\n  dispatch({\r\n    type: 'SET_LOADING',\r\n    payload: {\r\n      loading: false,\r\n      message: undefined,\r\n    },\r\n  });\r\n\r\n  sessionStorage.clear('user');\r\n  sessionStorage.clear('token');\r\n  sessionStorage.clear('balance');\r\n  history.push('/');\r\n  dispatch(logoutUser());\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}