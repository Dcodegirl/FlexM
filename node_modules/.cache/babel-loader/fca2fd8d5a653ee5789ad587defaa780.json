{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\flexiMoney-web-app\\\\src\\\\custom-hooks\\\\Context.js\";\nimport React, { createContext, useContext, useState } from 'react';\nexport const GlobalContext = createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [email, setEmail] = useState('');\n  const [userId, setUserId] = useState('');\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [address, setAddress] = useState('');\n  const [lga, setLga] = useState('');\n  const [state, setState] = useState('');\n  const [phoneNum, setPhoneNum] = useState('');\n  const [country, setCountry] = useState('');\n  const [selectedState, setSelectedState] = useState();\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [successModalOpen, setSuccessModalOpen] = useState(false);\n  const updateSelectedCountry = country => {\n    setSelectedCountry(country);\n  };\n  const updateSelectedState = state => {\n    setSelectedState(state);\n  };\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      email,\n      setEmail,\n      successModalOpen,\n      setSuccessModalOpen,\n      userId,\n      setUserId,\n      firstname,\n      setFirstname,\n      lastname,\n      setLastname,\n      lga,\n      setLga,\n      address,\n      setAddress,\n      phoneNum,\n      setPhoneNum,\n      selectedState,\n      setSelectedState,\n      selectedCountry,\n      setSelectedCountry,\n      country,\n      setCountry,\n      state,\n      setState,\n      updateSelectedCountry,\n      updateSelectedState\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport const useGlobalContext = () => useContext(GlobalContext);","map":{"version":3,"names":["React","createContext","useContext","useState","GlobalContext","GlobalProvider","children","email","setEmail","userId","setUserId","firstname","setFirstname","lastname","setLastname","address","setAddress","lga","setLga","state","setState","phoneNum","setPhoneNum","country","setCountry","selectedState","setSelectedState","selectedCountry","setSelectedCountry","successModalOpen","setSuccessModalOpen","updateSelectedCountry","updateSelectedState","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","useGlobalContext"],"sources":["C:/Users/USER/Documents/flexiMoney-web-app/src/custom-hooks/Context.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [userId, setUserId] = useState('');\r\n    const [firstname, setFirstname] = useState('');\r\n    const [lastname, setLastname] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [lga, setLga] = useState('');\r\n    const [state, setState] = useState('');\r\n    const [phoneNum, setPhoneNum] = useState('');\r\n    const [country, setCountry] = useState('');\r\n    const [selectedState, setSelectedState] = useState();\r\n    const [selectedCountry, setSelectedCountry] = useState('');\r\n    const [successModalOpen, setSuccessModalOpen] = useState(false);\r\n\r\n    const updateSelectedCountry = (country) => {\r\n        setSelectedCountry(country);\r\n      };\r\n    \r\n      const updateSelectedState = (state) => {\r\n        setSelectedState(state);\r\n      };\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{ \r\n                email, setEmail,\r\n                successModalOpen, setSuccessModalOpen,\r\n                userId, setUserId, \r\n                firstname, setFirstname,\r\n                lastname, setLastname,\r\n                lga, setLga,\r\n                address, setAddress,\r\n                phoneNum, setPhoneNum,\r\n                selectedState, setSelectedState,\r\n                selectedCountry, setSelectedCountry,\r\n                country, setCountry,\r\n                state, setState,\r\n                updateSelectedCountry,\r\n               updateSelectedState,\r\n                }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useGlobalContext = () => useContext(GlobalContext);\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAElE,OAAO,MAAMC,aAAa,GAAGH,aAAa,CAAC,CAAC;AAE5C,OAAO,MAAMI,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,GAAG,EAAEC,MAAM,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,CAAC;EACpD,MAAM,CAACwB,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC0B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAM4B,qBAAqB,GAAIR,OAAO,IAAK;IACvCK,kBAAkB,CAACL,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMS,mBAAmB,GAAIb,KAAK,IAAK;IACrCO,gBAAgB,CAACP,KAAK,CAAC;EACzB,CAAC;EAEH,oBACInB,KAAA,CAAAiC,aAAA,CAAC7B,aAAa,CAAC8B,QAAQ;IACnBC,KAAK,EAAE;MACH5B,KAAK;MAAEC,QAAQ;MACfqB,gBAAgB;MAAEC,mBAAmB;MACrCrB,MAAM;MAAEC,SAAS;MACjBC,SAAS;MAAEC,YAAY;MACvBC,QAAQ;MAAEC,WAAW;MACrBG,GAAG;MAAEC,MAAM;MACXH,OAAO;MAAEC,UAAU;MACnBK,QAAQ;MAAEC,WAAW;MACrBG,aAAa;MAAEC,gBAAgB;MAC/BC,eAAe;MAAEC,kBAAkB;MACnCL,OAAO;MAAEC,UAAU;MACnBL,KAAK;MAAEC,QAAQ;MACfW,qBAAqB;MACtBC;IACC,CAAE;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACLnC,QACmB,CAAC;AAEjC,CAAC;AAED,OAAO,MAAMoC,gBAAgB,GAAGA,CAAA,KAAMxC,UAAU,CAACE,aAAa,CAAC"},"metadata":{},"sourceType":"module"}