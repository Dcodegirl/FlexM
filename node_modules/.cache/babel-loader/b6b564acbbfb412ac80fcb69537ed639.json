{"ast":null,"code":"import axios from '../utils/axiosInstance';\nimport history from '../utils/history';\nimport setAuthToken from '../utils/setAuthToken';\nimport { useToasts } from \"react-toast-notifications\";\nconst LOGIN_API = '/users/signin';\nconst OTP_VERIFICATION_API = '/user/otpVer';\n\n// Action types\nconst START_LOGIN_USER = 'START_LOGIN_USER';\nconst START_OTP_VERIFICATION = 'START_OTP_VERIFICATION';\nconst LOGOUT_USER = 'LOGOUT_USER';\nconst {\n  addToast\n} = useToasts();\n\n// Action creators\nconst loginUser = userData => ({\n  type: START_LOGIN_USER,\n  payload: userData\n});\nconst logoutUser = () => ({\n  type: LOGOUT_USER\n});\n\n// Thunk actions\nexport const startLoginUser = (payload, history) => async dispatch => {\n  try {\n    const response = await axios.post(OTP_VERIFICATION_API, payload);\n    const {\n      data\n    } = response;\n    const token = data.data.token;\n    sessionStorage.setItem('token', token);\n    // console.log(token)\n\n    // Extract necessary data from the response\n    if (token) {\n      sessionStorage.setItem('isAuthenticated', true);\n      const authDetails = {\n        isAuthenticated: true,\n        user: {\n          ...data.data.user_info\n        },\n        bank: {\n          ...data.data.bank_info\n        },\n        has_pin: data.data.has_pin,\n        image: data.data.image\n      };\n      setAuthToken(token);\n      dispatch(loginUser(authDetails));\n      sessionStorage.setItem('user', JSON.stringify(authDetails));\n      // Use history.replace instead of history.push to replace the current entry\n      history.replace('/overview');\n      window.location.reload();\n    }\n\n    // Dispatch action to update the store with code\n  } catch (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      const {\n        data,\n        status\n      } = error.response;\n      console.error(`HTTP error! Status: ${status}, Message: ${data.message}`);\n\n      // Handle different status codes\n      switch (status) {\n        case 400:\n          // Bad Request (400)\n          if (data && data.errors) {\n            Object.values(data.errors).flat().forEach(errorMessage => {\n              addToast(`${errorMessage}`, {\n                appearance: 'error',\n                autoDismiss: true,\n                autoDismissTimeout: 3000\n              });\n            });\n          } else if (data && data.message) {\n            addToast(`${data.message}`, {\n              appearance: 'error',\n              autoDismiss: true,\n              autoDismissTimeout: 3000\n            });\n          } else {\n            addToast('Bad Request. Please check your input.', {\n              appearance: 'error',\n              autoDismiss: true,\n              autoDismissTimeout: 3000\n            });\n          }\n          break;\n        case 500:\n          // Internal Server Error (500)\n          addToast('Internal Server Error. Please try again later.', {\n            appearance: 'error',\n            autoDismiss: true,\n            autoDismissTimeout: 3000\n          });\n          break;\n        // Add more cases for other status codes as needed\n        default:\n          // Display an error toast with the API response message\n          addToast(data.message || 'An unexpected error occurred.', {\n            appearance: \"error\",\n            autoDismiss: true,\n            autoDismissTimeout: 3000\n          });\n      }\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error(\"No response received from the server.\");\n      addToast(\"No response from the server. Please try again.\", {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 3000\n      });\n    } else {\n      // Something happened in setting up the request that triggered an error\n      console.error(\"An unexpected error occurred:\", error.message);\n\n      // Display an error toast with the API response message if available\n      addToast(error.message || 'An unexpected error occurred.', {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 3000\n      });\n    }\n  }\n};\nexport const startLogout = () => dispatch => {\n  dispatch({\n    type: 'SET_LOADING',\n    payload: {\n      loading: false,\n      message: undefined\n    }\n  });\n  sessionStorage.clear('user');\n  sessionStorage.clear('token');\n  sessionStorage.clear('balance');\n  history.push('/');\n  dispatch(logoutUser());\n};","map":{"version":3,"names":["axios","history","setAuthToken","useToasts","LOGIN_API","OTP_VERIFICATION_API","START_LOGIN_USER","START_OTP_VERIFICATION","LOGOUT_USER","addToast","loginUser","userData","type","payload","logoutUser","startLoginUser","dispatch","response","post","data","token","sessionStorage","setItem","authDetails","isAuthenticated","user","user_info","bank","bank_info","has_pin","image","JSON","stringify","replace","window","location","reload","error","status","console","message","errors","Object","values","flat","forEach","errorMessage","appearance","autoDismiss","autoDismissTimeout","request","startLogout","loading","undefined","clear","push"],"sources":["C:/Users/USER/Documents/flexiMoney-web-app/src/actions/auth2.js"],"sourcesContent":["import axios from '../utils/axiosInstance';\r\nimport history from '../utils/history';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n\r\n\r\n\r\nconst LOGIN_API = '/users/signin';\r\nconst OTP_VERIFICATION_API = '/user/otpVer';\r\n\r\n// Action types\r\nconst START_LOGIN_USER = 'START_LOGIN_USER';\r\nconst START_OTP_VERIFICATION = 'START_OTP_VERIFICATION';\r\nconst LOGOUT_USER = 'LOGOUT_USER';\r\nconst {addToast} = useToasts()\r\n\r\n// Action creators\r\nconst loginUser = (userData) => ({\r\n  type: START_LOGIN_USER,\r\n  payload: userData,\r\n});\r\n\r\n\r\n\r\nconst logoutUser = () => ({\r\n  type: LOGOUT_USER,\r\n});\r\n\r\n// Thunk actions\r\nexport const startLoginUser = (payload, history) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.post(OTP_VERIFICATION_API, payload);\r\n    const { data } = response;\r\n    const token = data.data.token;\r\n    sessionStorage.setItem('token', token);\r\n    // console.log(token)\r\n\r\n\r\n    // Extract necessary data from the response\r\n    if (token) {\r\n      sessionStorage.setItem('isAuthenticated', true);\r\n      const authDetails = {\r\n        isAuthenticated: true,\r\n        user: {\r\n          ...data.data.user_info\r\n        },\r\n        bank: {\r\n          ...data.data.bank_info\r\n        },\r\n        has_pin: data.data.has_pin,\r\n        image: data.data.image,\r\n\r\n\r\n      };\r\n      setAuthToken(token);\r\n      dispatch(loginUser(authDetails));\r\n      sessionStorage.setItem('user', JSON.stringify(authDetails));\r\n      // Use history.replace instead of history.push to replace the current entry\r\n      history.replace('/overview');\r\n      window.location.reload();\r\n\r\n    }\r\n\r\n\r\n\r\n    // Dispatch action to update the store with code\r\n\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      const { data, status } = error.response;\r\n      console.error(`HTTP error! Status: ${status}, Message: ${data.message}`);\r\n      \r\n      // Handle different status codes\r\n      switch (status) {\r\n        case 400:\r\n          // Bad Request (400)\r\n          if (data && data.errors) {\r\n            Object.values(data.errors).flat().forEach(errorMessage => {\r\n              addToast(`${errorMessage}`, {\r\n                appearance: 'error',\r\n                autoDismiss: true,\r\n                autoDismissTimeout: 3000,\r\n              });\r\n            });\r\n          } else if (data && data.message) {\r\n            addToast(`${data.message}`, {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n              autoDismissTimeout: 3000,\r\n            });\r\n          } else {\r\n            addToast('Bad Request. Please check your input.', {\r\n              appearance: 'error',\r\n              autoDismiss: true,\r\n              autoDismissTimeout: 3000,\r\n            });\r\n          }\r\n          break;\r\n        case 500:\r\n          // Internal Server Error (500)\r\n          addToast('Internal Server Error. Please try again later.', {\r\n            appearance: 'error',\r\n            autoDismiss: true,\r\n            autoDismissTimeout: 3000,\r\n          });\r\n          break;\r\n        // Add more cases for other status codes as needed\r\n        default:\r\n          // Display an error toast with the API response message\r\n          addToast(data.message || 'An unexpected error occurred.', {\r\n            appearance: \"error\",\r\n            autoDismiss: true,\r\n            autoDismissTimeout: 3000,\r\n          });\r\n      }\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error(\"No response received from the server.\");\r\n  \r\n      addToast(\"No response from the server. Please try again.\", {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 3000,\r\n      });\r\n    } else {\r\n      // Something happened in setting up the request that triggered an error\r\n      console.error(\"An unexpected error occurred:\", error.message);\r\n  \r\n      // Display an error toast with the API response message if available\r\n      addToast(error.message || 'An unexpected error occurred.', {\r\n        appearance: \"error\",\r\n        autoDismiss: true,\r\n        autoDismissTimeout: 3000,\r\n      });\r\n    }\r\n  } \r\n};\r\n\r\n\r\n\r\nexport const startLogout = () => (dispatch) => {\r\n    dispatch({\r\n        type: 'SET_LOADING',\r\n        payload: {\r\n            loading: false,\r\n            message: undefined,\r\n        },\r\n    });\r\n\r\n    sessionStorage.clear('user');\r\n    sessionStorage.clear('token');\r\n    sessionStorage.clear('balance');\r\n    history.push('/');\r\n    dispatch(logoutUser());\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}