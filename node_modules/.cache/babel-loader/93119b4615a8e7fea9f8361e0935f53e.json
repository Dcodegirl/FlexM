{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\flexiMoney-web-app\\\\src\\\\features\\\\services\\\\data\\\\BuyDataForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Form from '../../../components/common/Form';\nimport FormGroup from '../../../components/common/FormGroup';\nimport Select from '../../../components/common/Select';\nimport Input from '../../../components/common/Input';\nimport Submit from '../../../components/common/Button';\nimport generateNetworkImageUrl from './generateNetworkImageUrl';\nimport { GET_DATA_PLANS } from '../../../utils/constants';\nimport validateFormData from '../../../validation/validateFormData';\nexport const BuyDataForm = props => {\n  const {\n    DataPurchaseFormState: state,\n    setState,\n    setComponentToRender,\n    service\n  } = props;\n  const [validationErrors, setValidationErrors] = useState({});\n  const [dataPlans, setDataPlans] = useState([]);\n  const [data, setData] = useState([]);\n  const networkImageUrl = generateNetworkImageUrl(service);\n  useEffect(() => {\n    const telcoList = {\n      airtel: 'Airtel',\n      '9mobile': '9mobile',\n      glo: 'Globacom',\n      mtn: 'MTN'\n    };\n    const telcoName = telcoList[`${service}`];\n    axios.post(GET_DATA_PLANS, {\n      \"operator\": telcoName\n    }).then(res => {\n      setDataPlans(res.data.data);\n    }).catch(err => {});\n  }, [service]);\n  useEffect(() => {\n    if (state.productId) {\n      const selectedPlan = dataPlans.filter(plan => {\n        return plan.productId === state.productId;\n      })[0];\n      const amount = selectedPlan.amount;\n      setState({\n        type: 'UPDATE_FORM_STATE',\n        payload: {\n          amount\n        }\n      });\n    }\n  }, [state.productId]);\n  const handleOnContinue = e => {\n    e.preventDefault();\n    const keys = Object.keys(state);\n    const errors = validateFormData(state, keys);\n    console.log(keys);\n    setValidationErrors(errors);\n    delete errors.transaction_pin;\n    if (Object.keys(errors).length > 0) return;\n    setComponentToRender('summary');\n  };\n  const handleSetFormState = ({\n    target\n  }) => {\n    setValidationErrors({\n      ...validationErrors,\n      [target.name]: false\n    });\n    setState({\n      type: 'UPDATE_FORM_STATE',\n      payload: {\n        [target.name]: target.value\n      }\n    });\n  };\n  state.operator = service;\n  return /*#__PURE__*/React.createElement(Form, {\n    autoComplete: \"off\",\n    title: \"Buy Data\",\n    caption: \"Complete your payment information\",\n    handleOnSubmit: handleOnContinue,\n    logo: networkImageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"phone\",\n    placeholder: \"e.g 08012345678\",\n    label: \"Phone Number\",\n    value: state.phone,\n    type: \"text\",\n    handleOnChange: e => handleSetFormState(e),\n    error: validationErrors.phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"productId\",\n    label: \"Plan\",\n    handleOnChange: e => handleSetFormState(e),\n    error: validationErrors.plan,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Select Plan\"), dataPlans.map((plan, index) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: plan.productId,\n      key: `${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, plan.description);\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"amount\",\n    label: \"Amount\",\n    placeholder: \"Amount\",\n    value: state.amount,\n    type: \"text\",\n    handleOnChange: e => handleSetFormState(e),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Submit, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Continue\"));\n};\nBuyDataForm.propTypes = {\n  networkList: PropTypes.array.isRequired,\n  AirtimePurchaseFormState: PropTypes.object.isRequired,\n  setState: PropTypes.func.isRequired,\n  setComponentToRender: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => {\n  return {\n    service: state.modal.service\n  };\n};\nexport default connect(mapStateToProps)(BuyDataForm);","map":{"version":3,"names":["React","useState","useEffect","PropTypes","axios","connect","Form","FormGroup","Select","Input","Submit","generateNetworkImageUrl","GET_DATA_PLANS","validateFormData","BuyDataForm","props","DataPurchaseFormState","state","setState","setComponentToRender","service","validationErrors","setValidationErrors","dataPlans","setDataPlans","data","setData","networkImageUrl","telcoList","airtel","glo","mtn","telcoName","post","then","res","catch","err","productId","selectedPlan","filter","plan","amount","type","payload","handleOnContinue","e","preventDefault","keys","Object","errors","console","log","transaction_pin","length","handleSetFormState","target","name","value","operator","createElement","autoComplete","title","caption","handleOnSubmit","logo","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","label","phone","handleOnChange","error","map","index","key","description","disabled","propTypes","networkList","array","isRequired","AirtimePurchaseFormState","object","func","mapStateToProps","modal"],"sources":["C:/Users/USER/Documents/flexiMoney-web-app/src/features/services/data/BuyDataForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport Form from '../../../components/common/Form';\r\nimport FormGroup from '../../../components/common/FormGroup';\r\nimport Select from '../../../components/common/Select';\r\nimport Input from '../../../components/common/Input';\r\nimport Submit from '../../../components/common/Button';\r\nimport generateNetworkImageUrl from './generateNetworkImageUrl';\r\nimport { GET_DATA_PLANS } from '../../../utils/constants';\r\nimport validateFormData from '../../../validation/validateFormData';\r\n\r\nexport const BuyDataForm = (props) => {\r\n    const {\r\n        DataPurchaseFormState: state,\r\n        setState,\r\n        setComponentToRender,\r\n        service,\r\n    } = props;\r\n    const [validationErrors, setValidationErrors] = useState({});\r\n    const [dataPlans, setDataPlans] = useState([]);\r\n    const [data,setData] = useState([])\r\n    const networkImageUrl = generateNetworkImageUrl(service);\r\n\r\n    useEffect(() => {\r\n        const telcoList = {\r\n            airtel: 'Airtel',\r\n            '9mobile': '9mobile',\r\n            glo: 'Globacom',\r\n            mtn: 'MTN',\r\n        };\r\n\r\n        const telcoName = telcoList[`${service}`];\r\n        axios\r\n            .post(GET_DATA_PLANS, {\"operator\":telcoName})\r\n            .then((res) => {  \r\n                setDataPlans(res.data.data);\r\n\r\n            })\r\n            \r\n            .catch((err) => {\r\n                \r\n            });\r\n    }, [service]);\r\n\r\n    useEffect(() => {\r\n       \r\n        if (state.productId) {\r\n            const selectedPlan = dataPlans.filter((plan) => {\r\n                return plan.productId === state.productId;\r\n            })[0];\r\n          \r\n\r\n            const amount = selectedPlan.amount;\r\n\r\n            setState({\r\n                type: 'UPDATE_FORM_STATE',\r\n                payload: { amount },\r\n            });\r\n        }\r\n        \r\n    }, [state.productId]);\r\n\r\n    const handleOnContinue = (e) => {\r\n        e.preventDefault();\r\n        const keys = Object.keys(state);\r\n        const errors = validateFormData(state, keys);\r\n        console.log(keys)\r\n        setValidationErrors(errors);\r\n\r\n        delete errors.transaction_pin;\r\n\r\n        if (Object.keys(errors).length > 0) return;\r\n\r\n        setComponentToRender('summary');\r\n    };\r\n\r\n    const handleSetFormState = ({ target }) => {\r\n        setValidationErrors({ ...validationErrors, [target.name]: false });\r\n\r\n        setState({\r\n            type: 'UPDATE_FORM_STATE',\r\n            payload: { [target.name]: target.value },\r\n        });\r\n    };\r\n    state.operator=service\r\n    return (\r\n        <Form\r\n            autoComplete='off'\r\n            title='Buy Data'\r\n            caption='Complete your payment information'\r\n            handleOnSubmit={handleOnContinue}\r\n            logo={networkImageUrl}\r\n        >\r\n            <FormGroup>\r\n                <Input\r\n                    name='phone'\r\n                    placeholder='e.g 08012345678'\r\n                    label='Phone Number'\r\n                    value={state.phone}\r\n                    type='text'\r\n                    handleOnChange={(e) => handleSetFormState(e)}\r\n                    error={validationErrors.phone}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Select\r\n                    name='productId'\r\n                    label='Plan'\r\n                    handleOnChange={(e) => handleSetFormState(e)}\r\n                    error={validationErrors.plan}\r\n                >\r\n                    <option value=''>Select Plan</option>\r\n                    {dataPlans.map((plan, index) => {\r\n                        return (\r\n                            <option\r\n                                value={plan.productId}\r\n                                key={`${index}`}\r\n                            >\r\n                                {plan.description}\r\n                            </option>\r\n                        );\r\n                    })}\r\n                </Select>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Input\r\n                    name='amount'\r\n                    label='Amount'\r\n                    placeholder='Amount'\r\n                    value={state.amount}\r\n                    type='text'\r\n                    handleOnChange={(e) => handleSetFormState(e)}\r\n                    disabled\r\n                />\r\n            </FormGroup>\r\n            <Submit type='submit'>Continue</Submit>\r\n        </Form>\r\n    );\r\n};\r\n\r\nBuyDataForm.propTypes = {\r\n    networkList: PropTypes.array.isRequired,\r\n    AirtimePurchaseFormState: PropTypes.object.isRequired,\r\n    setState: PropTypes.func.isRequired,\r\n    setComponentToRender: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        service: state.modal.service,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(BuyDataForm);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}