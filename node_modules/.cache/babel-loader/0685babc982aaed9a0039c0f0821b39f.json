{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\flexiMoney-web-app\\\\src\\\\features\\\\profile\\\\Password.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { ThreeDots } from 'svg-loaders-react';\nimport { useToasts } from 'react-toast-notifications';\nimport { connect } from 'react-redux';\nimport logo from \"../../assets/images/cico-logo.svg\";\nimport Form from '../../components/common/Form';\nimport FormGroup from '../../components/common/FormGroup';\nimport Input from '../../components/common/Input';\nimport Submit from '../../components/common/Button';\nimport { UPDATE_USER_PASSWORD } from '../../utils/constants';\nimport validateFormData from '../../validation/validateFormData';\nimport { setDisplayModal } from '../../actions/modal';\nexport const Password = ({\n  displayModal\n}) => {\n  const [formState, setFormState] = useState({\n    password: '',\n    new_password: '',\n    confirm_password: ''\n  });\n  const [validationErrors, setValidationErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const {\n    addToast\n  } = useToasts();\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    const {\n      new_password,\n      confirm_password,\n      password\n    } = formState;\n    const payload = {\n      password,\n      new_password,\n      confirm_password\n    };\n    const keys = Object.keys(payload);\n    const errors = validateFormData(formState, keys);\n    setValidationErrors(errors);\n    if (Object.keys(errors).length > 0) return;\n    submit();\n  };\n  const submit = () => {\n    const payload = formState;\n    setLoading(true);\n    (async function changePassword() {\n      try {\n        const res = await axios.put(UPDATE_USER_PASSWORD, payload);\n        if (res) {\n          addToast('Password changed successfully', {\n            appearance: 'success',\n            autoDismiss: true\n          });\n          displayModal({\n            overlay: false,\n            modal: false,\n            service: null\n          });\n        }\n      } catch (e) {\n        addToast('An error occurred', {\n          appearance: 'error',\n          autoDismiss: true\n        });\n      } finally {\n        setLoading(false);\n      }\n    })();\n  };\n  const handleSetFormState = ({\n    target\n  }) => {\n    setValidationErrors({\n      ...validationErrors,\n      [target.name]: false\n    });\n    setFormState({\n      ...formState,\n      [target.name]: target.value\n    });\n  };\n  return /*#__PURE__*/React.createElement(Form, {\n    autoComplete: \"off\",\n    title: \"Change password\",\n    caption: \"Complete your information\",\n    handleOnSubmit: handleOnSubmit,\n    logo: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    placeholder: \"Enter password\",\n    value: formState.password,\n    type: \"password\",\n    handleOnChange: e => handleSetFormState(e),\n    error: validationErrors.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"new_password\",\n    label: \"New Password\",\n    value: formState.new_password,\n    placeholder: \"Enter new password\",\n    type: \"password\",\n    handleOnChange: e => handleSetFormState(e),\n    error: validationErrors.new_password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"confirm_password\",\n    label: \"Confirm Password\",\n    placeholder: \"Confirm password\",\n    value: formState.confirm_password,\n    type: \"password\",\n    handleOnChange: e => handleSetFormState(e),\n    error: validationErrors.confirm_password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Submit, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(ThreeDots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 28\n    }\n  }) : 'Continue'));\n};\nPassword.propTypes = {\n  networkList: PropTypes.array.isRequired,\n  AirtimePurchaseFormState: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  setComponentToRender: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    displayModal: payload => dispatch(setDisplayModal(payload))\n  };\n};\nexport default connect(undefined, mapDispatchToProps)(Password);","map":{"version":3,"names":["React","useState","PropTypes","axios","ThreeDots","useToasts","connect","logo","Form","FormGroup","Input","Submit","UPDATE_USER_PASSWORD","validateFormData","setDisplayModal","Password","displayModal","formState","setFormState","password","new_password","confirm_password","validationErrors","setValidationErrors","loading","setLoading","addToast","handleOnSubmit","e","preventDefault","payload","keys","Object","errors","length","submit","changePassword","res","put","appearance","autoDismiss","overlay","modal","service","handleSetFormState","target","name","value","createElement","autoComplete","title","caption","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","label","placeholder","type","handleOnChange","error","propTypes","networkList","array","isRequired","AirtimePurchaseFormState","object","dispatch","func","setComponentToRender","mapDispatchToProps","undefined"],"sources":["C:/Users/USER/Documents/flexiMoney-web-app/src/features/profile/Password.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { ThreeDots } from 'svg-loaders-react';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { connect } from 'react-redux';\r\nimport logo from '../../assets/images/cico-logo.svg';\r\nimport Form from '../../components/common/Form';\r\nimport FormGroup from '../../components/common/FormGroup';\r\nimport Input from '../../components/common/Input';\r\nimport Submit from '../../components/common/Button';\r\nimport { UPDATE_USER_PASSWORD } from '../../utils/constants';\r\nimport validateFormData from '../../validation/validateFormData';\r\n\r\nimport { setDisplayModal } from '../../actions/modal';\r\n\r\nexport const Password = ({ displayModal }) => {\r\n    const [formState, setFormState] = useState({\r\n        password: '',\r\n        new_password: '',\r\n        confirm_password: '',\r\n    });\r\n    const [validationErrors, setValidationErrors] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const { addToast } = useToasts();\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { new_password, confirm_password, password } = formState;\r\n\r\n        const payload = {\r\n            password,\r\n            new_password,\r\n            confirm_password,\r\n        };\r\n\r\n        const keys = Object.keys(payload);\r\n        const errors = validateFormData(formState, keys);\r\n\r\n        setValidationErrors(errors);\r\n\r\n        if (Object.keys(errors).length > 0) return;\r\n\r\n        submit();\r\n    };\r\n\r\n    const submit = () => {\r\n        const payload = formState;\r\n        setLoading(true);\r\n\r\n        (async function changePassword() {\r\n            try {\r\n                const res = await axios.put(UPDATE_USER_PASSWORD, payload);\r\n\r\n                if (res) {\r\n                    addToast('Password changed successfully', {\r\n                        appearance: 'success',\r\n                        autoDismiss: true,\r\n                    });\r\n\r\n                    displayModal({\r\n                        overlay: false,\r\n                        modal: false,\r\n                        service: null,\r\n                    });\r\n                }\r\n            } catch (e) {\r\n                addToast('An error occurred', {\r\n                    appearance: 'error',\r\n                    autoDismiss: true,\r\n                });\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        })();\r\n    };\r\n\r\n    const handleSetFormState = ({ target }) => {\r\n        setValidationErrors({ ...validationErrors, [target.name]: false });\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n    return (\r\n        <Form\r\n            autoComplete='off'\r\n            title='Change password'\r\n            caption='Complete your information'\r\n            handleOnSubmit={handleOnSubmit}\r\n            logo={logo}\r\n        >\r\n            <FormGroup>\r\n                <Input\r\n                    name='password'\r\n                    label='Password'\r\n                    placeholder='Enter password'\r\n                    value={formState.password}\r\n                    type='password'\r\n                    handleOnChange={(e) => handleSetFormState(e)}\r\n                    error={validationErrors.password}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Input\r\n                    name='new_password'\r\n                    label='New Password'\r\n                    value={formState.new_password}\r\n                    placeholder='Enter new password'\r\n                    type='password'\r\n                    handleOnChange={(e) => handleSetFormState(e)}\r\n                    error={validationErrors.new_password}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Input\r\n                    name='confirm_password'\r\n                    label='Confirm Password'\r\n                    placeholder='Confirm password'\r\n                    value={formState.confirm_password}\r\n                    type='password'\r\n                    handleOnChange={(e) => handleSetFormState(e)}\r\n                    error={validationErrors.confirm_password}\r\n                />\r\n            </FormGroup>\r\n            <Submit type='submit'>\r\n                {loading ? <ThreeDots /> : 'Continue'}\r\n            </Submit>\r\n        </Form>\r\n    );\r\n};\r\n\r\nPassword.propTypes = {\r\n    networkList: PropTypes.array.isRequired,\r\n    AirtimePurchaseFormState: PropTypes.object.isRequired,\r\n    dispatch: PropTypes.func.isRequired,\r\n    setComponentToRender: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        displayModal: (payload) => dispatch(setDisplayModal(payload)),\r\n    };\r\n};\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Password);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}