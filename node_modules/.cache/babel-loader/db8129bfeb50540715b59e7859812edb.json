{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\flexiMoney-web-app\\\\src\\\\components\\\\transactionpinsettings\\\\TransactionPinSettings.jsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"../../utils/axiosInstance\";\nimport { useCustomToast } from \"../toast/useCustomToast\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nIMPORT;\nconst TransactionPinSettings = ({\n  title\n}) => {\n  const pinInputRefs = [useRef(), useRef(), useRef(), useRef()];\n  const confirmPinInputRefs = [useRef(), useRef(), useRef(), useRef()];\n  const [pin, setPin] = useState([]);\n  const [confirmPin, setConfirmPin] = useState([]);\n  const [loading, setLoading] = useState('');\n  const showToast = useCustomToast();\n  const history = useHistory();\n  const [pinPayload, setPinPayload] = useState({\n    agent_id: \"\",\n    transaction_pin: \"\"\n  });\n  const TRANSACTION_PIN = \"/AgPin\";\n  useEffect(() => {\n    // Make API call to fetch user information\n    axios.get(GET_USER_INFO).then(response => {\n      setPinPayload({\n        ...pinPayload,\n        agent_id: response.data.data.agent.id\n      });\n    }).catch(error => {\n      console.error(\"Error fetching user information:\", error);\n    });\n  }, []);\n  const handleInputChange = (index, setValue, nextInputRef, e) => {\n    const {\n      value\n    } = e.target;\n    setValue(prevPin => {\n      const newPin = [...prevPin];\n      newPin[index] = value;\n\n      // Move focus to the next input field if there is one and the current input is not the last one\n      if (value !== \"\" && index < 3 && nextInputRef.current) {\n        nextInputRef.current.focus();\n      } else if (index === 3 && value !== \"\") {\n        // Move to the first input of the confirm PIN form when the last PIN input is filled\n        confirmPinInputRefs[0].current.focus();\n      }\n      return newPin;\n    });\n  };\n  const handleKeyDown = (event, index) => {\n    if (event.key === 'Backspace' && index > 0 && !pin[index]) {\n      document.getElementById(`pin-input-${index - 1}`).focus();\n    }\n  };\n  const handleConfirmPinInputChange = (index, e) => {\n    const {\n      value\n    } = e.target;\n    setConfirmPin(prevConfirmPin => {\n      var _confirmPinInputRefs;\n      const newConfirmPin = [...prevConfirmPin];\n      newConfirmPin[index] = value;\n\n      // Move focus to the next input field if there is one\n      if (value !== \"\" && ((_confirmPinInputRefs = confirmPinInputRefs[index + 1]) === null || _confirmPinInputRefs === void 0 ? void 0 : _confirmPinInputRefs.current)) {\n        confirmPinInputRefs[index + 1].current.focus();\n      }\n      return newConfirmPin;\n    });\n  };\n  const handleConfirmKeyDown = (event, index) => {\n    if (event.key === 'Backspace' && index > 0 && !confirmPin[index]) {\n      document.getElementById(`confirmPin-input-${index - 1}`).focus();\n    }\n  };\n  const handleTransactionPin = async () => {\n    // Check if pin and confirmPin are not the same\n    setLoading(true);\n    if (pin.join(\"\") !== confirmPin.join(\"\")) {\n      // Display an error toast if pin and confirmPin do not match\n      showToast(\"PIN and Confirm PIN do not match!\", \"error\");\n      setLoading(false);\n      return; // Stop further processing\n    }\n\n    // Check if either pin or confirmPin is empty\n    if (pin.join(\"\") === \"\" || confirmPin.join(\"\") === \"\") {\n      showToast(\"Please enter both PIN and Confirm PIN\", \"error\");\n      setLoading(false);\n      return; // Stop further processing\n    }\n\n    // At this point, pin and confirmPin are the same, and both are not empty\n    const transactionPin = {\n      agent_id: pinPayload.agent_id,\n      transaction_pin: pin.join(\"\")\n    };\n    try {\n      let data = await axios.post(TRANSACTION_PIN, transactionPin);\n      showToast(\"Transaction pin updated successfully!\", \"success\");\n    } catch (error) {\n      console.error(\"Error saving changes:\", error);\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        const {\n          data,\n          status\n        } = error.response;\n        console.error(`HTTP error! Status: ${status}, Message: ${data.message}`);\n\n        // Handle different status codes\n        switch (status) {\n          case 400:\n            // Bad Request (400)\n            if (data && data.errors) {\n              Object.values(data.errors).flat().forEach(errorMessage => {\n                showToast(`${errorMessage}`, \"error\");\n              });\n            } else if (status && data && data.message) {\n              showToast(`${data.message}`, \"error\");\n            } else {\n              showToast('Bad Request. Please check your input.', \"error\");\n            }\n            break;\n          case 500:\n            // Internal Server Error (500)\n            showToast('Internal Server Error. Please try again later.', \"error\");\n            break;\n          // Add more cases for other status codes as needed\n          default:\n            // Display an error toast with the API response message\n            showToast(data.message || 'An unexpected error occurred.', \"error\");\n        }\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error(\"No response received from the server.\");\n        showToast(\"No response from the server. Please try again.\", \"error\");\n      } else {\n        // Something happened in setting up the request that triggered an error\n        console.error(\"An unexpected error occurred:\", error.message);\n\n        // Display an error toast with the API response message if available\n        showToast(error.message || 'An unexpected error occurred.', \"error\");\n      }\n    } finally {\n      setLoading(false); // This ensures that setLoading(false) is executed regardless of success or failure\n    }\n\n    history.push('/overview');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex md:flex-row flex-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"md:w-[200px] w-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-center align-center\",\n    id: \"pin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"md:py-20 md:px-40 px-20 text-2xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex md:flex-row flex-col md:gap-20 items-center mb-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col my-4 md:my-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"Enter Pin\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"flex space-x-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, pinInputRefs.map((ref, index) => /*#__PURE__*/React.createElement(\"input\", {\n    key: index,\n    placeholder: \"*\",\n    type: \"password\",\n    id: `pin-input-${index}`,\n    className: \"md:w-[66px] w-[40px] md:h-[69px] h-[53px] border border-gray-300 rounded text-center md:text-4xl text-2xl\",\n    maxLength: \"1\",\n    onChange: e => handleInputChange(index, setPin, pinInputRefs[index + 1], e),\n    ref: ref,\n    onKeyDown: e => handleKeyDown(e, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col  my-4 md:my-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, \"Confirm Pin\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"flex space-x-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, confirmPinInputRefs.map((ref, index) => /*#__PURE__*/React.createElement(\"input\", {\n    key: index,\n    id: `confirmPin-input-${index}`,\n    placeholder: \"*\",\n    type: \"password\",\n    className: \"md:w-[66px] w-[40px] md:h-[69px] h-[53px] border border-gray-300 rounded text-center md:text-4xl text-2xl\",\n    maxLength: \"1\",\n    onChange: e => handleConfirmPinInputChange(index, e),\n    onKeyDown: e => handleConfirmKeyDown(e, index),\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleTransactionPin,\n    className: `bg-color1  rounded-lg h-14 w-full text-white mx-auto relative ${loading ? 'opacity-50 pointer-events-none' : ''}`,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  })), loading ? 'Saving...' : 'Save'))));\n};\nexport default TransactionPinSettings;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useCustomToast","useHistory","IMPORT","TransactionPinSettings","title","pinInputRefs","confirmPinInputRefs","pin","setPin","confirmPin","setConfirmPin","loading","setLoading","showToast","history","pinPayload","setPinPayload","agent_id","transaction_pin","TRANSACTION_PIN","get","GET_USER_INFO","then","response","data","agent","id","catch","error","console","handleInputChange","index","setValue","nextInputRef","e","value","target","prevPin","newPin","current","focus","handleKeyDown","event","key","document","getElementById","handleConfirmPinInputChange","prevConfirmPin","_confirmPinInputRefs","newConfirmPin","handleConfirmKeyDown","handleTransactionPin","join","transactionPin","post","status","message","errors","Object","values","flat","forEach","errorMessage","request","push","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","ref","placeholder","type","maxLength","onChange","onKeyDown","onClick","disabled"],"sources":["C:/Users/USER/Documents/flexiMoney-web-app/src/components/transactionpinsettings/TransactionPinSettings.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"../../utils/axiosInstance\";\r\nimport { useCustomToast } from \"../toast/useCustomToast\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nIMPORT\r\n\r\n\r\n\r\nconst TransactionPinSettings = ({ title }) => {\r\n    const pinInputRefs = [useRef(), useRef(), useRef(), useRef()];\r\n    const confirmPinInputRefs = [useRef(), useRef(), useRef(), useRef()];\r\n    const [pin, setPin] = useState([]);\r\n    const [confirmPin, setConfirmPin] = useState([]);\r\n    const [loading, setLoading] = useState('');\r\n    const showToast = useCustomToast();\r\n    const history = useHistory();\r\n\r\n\r\n    const [pinPayload, setPinPayload] = useState({\r\n        agent_id: \"\",\r\n        transaction_pin: \"\",\r\n      });\r\n\r\n      const TRANSACTION_PIN = \"/AgPin\";\r\n\r\n      useEffect(() => {\r\n        // Make API call to fetch user information\r\n        axios\r\n          .get(GET_USER_INFO)\r\n          .then((response) => {\r\n           \r\n    \r\n            setPinPayload({\r\n              ...pinPayload,\r\n              agent_id: response.data.data.agent.id,\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching user information:\", error);\r\n          });\r\n      }, []);\r\n    \r\n    const handleInputChange = (index, setValue, nextInputRef, e) => {\r\n        const { value } = e.target;\r\n        setValue((prevPin) => {\r\n          const newPin = [...prevPin];\r\n          newPin[index] = value;\r\n    \r\n          // Move focus to the next input field if there is one and the current input is not the last one\r\n          if (value !== \"\" && index < 3 && nextInputRef.current) {\r\n            nextInputRef.current.focus();\r\n          } else if (index === 3 && value !== \"\") {\r\n            // Move to the first input of the confirm PIN form when the last PIN input is filled\r\n            confirmPinInputRefs[0].current.focus();\r\n          }\r\n    \r\n          return newPin;\r\n        });\r\n      };\r\n      const handleKeyDown = (event, index) => {\r\n        if (event.key === 'Backspace' && index > 0 && !pin[index]) {\r\n          document.getElementById(`pin-input-${index - 1}`).focus();\r\n        }\r\n      };\r\n      \r\n  const handleConfirmPinInputChange = (index, e) => {\r\n    const { value } = e.target;\r\n    setConfirmPin((prevConfirmPin) => {\r\n      const newConfirmPin = [...prevConfirmPin];\r\n      newConfirmPin[index] = value;\r\n\r\n      // Move focus to the next input field if there is one\r\n      if (value !== \"\" && confirmPinInputRefs[index + 1]?.current) {\r\n        confirmPinInputRefs[index + 1].current.focus();\r\n      }\r\n\r\n      return newConfirmPin;\r\n    });\r\n  };\r\n  const handleConfirmKeyDown = (event, index) => {\r\n    if (event.key === 'Backspace' && index > 0 && !confirmPin[index]) {\r\n      document.getElementById(`confirmPin-input-${index - 1}`).focus();\r\n    }\r\n  };\r\n  const handleTransactionPin = async () => {\r\n    // Check if pin and confirmPin are not the same\r\n    setLoading(true)\r\n    if (pin.join(\"\") !== confirmPin.join(\"\")) {\r\n      // Display an error toast if pin and confirmPin do not match\r\n      showToast(\"PIN and Confirm PIN do not match!\", \"error\");\r\n      setLoading(false)\r\n      return; // Stop further processing\r\n    }\r\n  \r\n    // Check if either pin or confirmPin is empty\r\n    if (pin.join(\"\") === \"\" || confirmPin.join(\"\") === \"\") {\r\n      showToast(\"Please enter both PIN and Confirm PIN\", \"error\");\r\n      setLoading(false)\r\n      return; // Stop further processing\r\n    }\r\n  \r\n    // At this point, pin and confirmPin are the same, and both are not empty\r\n    const transactionPin = {\r\n      agent_id: pinPayload.agent_id,\r\n      transaction_pin: pin.join(\"\"),\r\n    };\r\n  \r\n    try {\r\n      let data = await axios.post(TRANSACTION_PIN, transactionPin);\r\n      showToast(\"Transaction pin updated successfully!\", \"success\");\r\n    } catch (error) {\r\n      console.error(\"Error saving changes:\", error);\r\n  \r\n      if (error.response) {\r\n        // The request was made and the server responded with a status code\r\n        const { data, status } = error.response;\r\n        console.error(`HTTP error! Status: ${status}, Message: ${data.message}`);\r\n        \r\n        // Handle different status codes\r\n        switch (status) {\r\n          case 400:\r\n            // Bad Request (400)\r\n            if (data && data.errors) {\r\n              Object.values(data.errors).flat().forEach(errorMessage => {\r\n                showToast(`${errorMessage}`, \"error\");\r\n              });\r\n            } else if (status && data && data.message) {\r\n              showToast(`${data.message}`, \"error\");\r\n            } else {\r\n              showToast('Bad Request. Please check your input.', \"error\");\r\n            }\r\n            break;\r\n          case 500:\r\n            // Internal Server Error (500)\r\n            showToast('Internal Server Error. Please try again later.', \"error\");\r\n            break;\r\n          // Add more cases for other status codes as needed\r\n          default:\r\n            // Display an error toast with the API response message\r\n            showToast(data.message || 'An unexpected error occurred.', \"error\");\r\n        }\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        console.error(\"No response received from the server.\");\r\n  \r\n        showToast(\"No response from the server. Please try again.\", \"error\");\r\n      } else {\r\n        // Something happened in setting up the request that triggered an error\r\n        console.error(\"An unexpected error occurred:\", error.message);\r\n  \r\n        // Display an error toast with the API response message if available\r\n        showToast(error.message || 'An unexpected error occurred.', \"error\");\r\n      }\r\n      } finally {\r\n      setLoading(false); // This ensures that setLoading(false) is executed regardless of success or failure\r\n    }\r\n    history.push('/overview')\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex md:flex-row flex-col\">\r\n              <div className=\"md:w-[200px] w-0\"></div>\r\n      <div className=\"flex justify-center align-center\" id=\"pin\">\r\n           <div className=\"md:py-20 md:px-40 px-20 text-2xl\">\r\n          <div className=\"flex md:flex-row flex-col md:gap-20 items-center mb-8\">\r\n            <div className=\"flex flex-col my-4 md:my-0\">\r\n              <p>Enter Pin</p>\r\n              <form className=\"flex space-x-4\">\r\n                {pinInputRefs.map((ref, index) => (\r\n                  <input\r\n                    key={index}\r\n                    placeholder=\"*\"\r\n                    type=\"password\"\r\n                    id={`pin-input-${index}`}\r\n                    className=\"md:w-[66px] w-[40px] md:h-[69px] h-[53px] border border-gray-300 rounded text-center md:text-4xl text-2xl\"\r\n                    maxLength=\"1\"\r\n                    onChange={(e) =>\r\n                      handleInputChange(\r\n                        index,\r\n                        setPin,\r\n                        pinInputRefs[index + 1],\r\n                        e\r\n                      )\r\n                    }\r\n                    ref={ref}\r\n                    onKeyDown={(e) => handleKeyDown(e, index)}\r\n                  />\r\n                ))}\r\n              </form>\r\n            </div>\r\n            <div className=\"flex flex-col  my-4 md:my-0\">\r\n              <p>Confirm Pin</p>\r\n              <form className=\"flex space-x-4\">\r\n                {confirmPinInputRefs.map((ref, index) => (\r\n                  <input\r\n                    key={index}\r\n                    id={`confirmPin-input-${index}`}\r\n                    placeholder=\"*\"\r\n                    type=\"password\"\r\n                    className=\"md:w-[66px] w-[40px] md:h-[69px] h-[53px] border border-gray-300 rounded text-center md:text-4xl text-2xl\"\r\n                    maxLength=\"1\"\r\n                    onChange={(e) => handleConfirmPinInputChange(index, e)}\r\n                    onKeyDown={(e) => handleConfirmKeyDown(e, index)}\r\n                    ref={ref}\r\n                  />\r\n                ))}\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n         \r\n          <button\r\n            type=\"submit\"\r\n            onClick={handleTransactionPin}\r\n            className={`bg-color1  rounded-lg h-14 w-full text-white mx-auto relative ${loading ? 'opacity-50 pointer-events-none' : ''\r\n              }`}\r\n            disabled={loading}\r\n          >\r\n            {loading && (\r\n              <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n                <div className=\"loader\"></div>\r\n              </div>\r\n            )}\r\n            {loading ? 'Saving...' : 'Save'}\r\n          </button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TransactionPinSettings"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,UAAU,QAAQ,2CAA2C;AACtEC,MAAM;AAIN,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAC1C,MAAMC,YAAY,GAAG,CAACP,MAAM,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC;EAC7D,MAAMQ,mBAAmB,GAAG,CAACR,MAAM,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC;EACpE,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMiB,SAAS,GAAGb,cAAc,CAAC,CAAC;EAClC,MAAMc,OAAO,GAAGb,UAAU,CAAC,CAAC;EAG5B,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC;IACzCqB,QAAQ,EAAE,EAAE;IACZC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAG,QAAQ;EAEhCtB,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CACFqB,GAAG,CAACC,aAAa,CAAC,CAClBC,IAAI,CAAEC,QAAQ,IAAK;MAGlBP,aAAa,CAAC;QACZ,GAAGD,UAAU;QACbE,QAAQ,EAAEM,QAAQ,CAACC,IAAI,CAACA,IAAI,CAACC,KAAK,CAACC;MACrC,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAER,MAAME,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,CAAC,KAAK;IAC5D,MAAM;MAAEC;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAC1BJ,QAAQ,CAAEK,OAAO,IAAK;MACpB,MAAMC,MAAM,GAAG,CAAC,GAAGD,OAAO,CAAC;MAC3BC,MAAM,CAACP,KAAK,CAAC,GAAGI,KAAK;;MAErB;MACA,IAAIA,KAAK,KAAK,EAAE,IAAIJ,KAAK,GAAG,CAAC,IAAIE,YAAY,CAACM,OAAO,EAAE;QACrDN,YAAY,CAACM,OAAO,CAACC,KAAK,CAAC,CAAC;MAC9B,CAAC,MAAM,IAAIT,KAAK,KAAK,CAAC,IAAII,KAAK,KAAK,EAAE,EAAE;QACtC;QACA7B,mBAAmB,CAAC,CAAC,CAAC,CAACiC,OAAO,CAACC,KAAK,CAAC,CAAC;MACxC;MAEA,OAAOF,MAAM;IACf,CAAC,CAAC;EACJ,CAAC;EACD,MAAMG,aAAa,GAAGA,CAACC,KAAK,EAAEX,KAAK,KAAK;IACtC,IAAIW,KAAK,CAACC,GAAG,KAAK,WAAW,IAAIZ,KAAK,GAAG,CAAC,IAAI,CAACxB,GAAG,CAACwB,KAAK,CAAC,EAAE;MACzDa,QAAQ,CAACC,cAAc,CAAE,aAAYd,KAAK,GAAG,CAAE,EAAC,CAAC,CAACS,KAAK,CAAC,CAAC;IAC3D;EACF,CAAC;EAEL,MAAMM,2BAA2B,GAAGA,CAACf,KAAK,EAAEG,CAAC,KAAK;IAChD,MAAM;MAAEC;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAC1B1B,aAAa,CAAEqC,cAAc,IAAK;MAAA,IAAAC,oBAAA;MAChC,MAAMC,aAAa,GAAG,CAAC,GAAGF,cAAc,CAAC;MACzCE,aAAa,CAAClB,KAAK,CAAC,GAAGI,KAAK;;MAE5B;MACA,IAAIA,KAAK,KAAK,EAAE,MAAAa,oBAAA,GAAI1C,mBAAmB,CAACyB,KAAK,GAAG,CAAC,CAAC,cAAAiB,oBAAA,uBAA9BA,oBAAA,CAAgCT,OAAO,GAAE;QAC3DjC,mBAAmB,CAACyB,KAAK,GAAG,CAAC,CAAC,CAACQ,OAAO,CAACC,KAAK,CAAC,CAAC;MAChD;MAEA,OAAOS,aAAa;IACtB,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,oBAAoB,GAAGA,CAACR,KAAK,EAAEX,KAAK,KAAK;IAC7C,IAAIW,KAAK,CAACC,GAAG,KAAK,WAAW,IAAIZ,KAAK,GAAG,CAAC,IAAI,CAACtB,UAAU,CAACsB,KAAK,CAAC,EAAE;MAChEa,QAAQ,CAACC,cAAc,CAAE,oBAAmBd,KAAK,GAAG,CAAE,EAAC,CAAC,CAACS,KAAK,CAAC,CAAC;IAClE;EACF,CAAC;EACD,MAAMW,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC;IACAvC,UAAU,CAAC,IAAI,CAAC;IAChB,IAAIL,GAAG,CAAC6C,IAAI,CAAC,EAAE,CAAC,KAAK3C,UAAU,CAAC2C,IAAI,CAAC,EAAE,CAAC,EAAE;MACxC;MACAvC,SAAS,CAAC,mCAAmC,EAAE,OAAO,CAAC;MACvDD,UAAU,CAAC,KAAK,CAAC;MACjB,OAAO,CAAC;IACV;;IAEA;IACA,IAAIL,GAAG,CAAC6C,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI3C,UAAU,CAAC2C,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;MACrDvC,SAAS,CAAC,uCAAuC,EAAE,OAAO,CAAC;MAC3DD,UAAU,CAAC,KAAK,CAAC;MACjB,OAAO,CAAC;IACV;;IAEA;IACA,MAAMyC,cAAc,GAAG;MACrBpC,QAAQ,EAAEF,UAAU,CAACE,QAAQ;MAC7BC,eAAe,EAAEX,GAAG,CAAC6C,IAAI,CAAC,EAAE;IAC9B,CAAC;IAED,IAAI;MACF,IAAI5B,IAAI,GAAG,MAAMzB,KAAK,CAACuD,IAAI,CAACnC,eAAe,EAAEkC,cAAc,CAAC;MAC5DxC,SAAS,CAAC,uCAAuC,EAAE,SAAS,CAAC;IAC/D,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAE7C,IAAIA,KAAK,CAACL,QAAQ,EAAE;QAClB;QACA,MAAM;UAAEC,IAAI;UAAE+B;QAAO,CAAC,GAAG3B,KAAK,CAACL,QAAQ;QACvCM,OAAO,CAACD,KAAK,CAAE,uBAAsB2B,MAAO,cAAa/B,IAAI,CAACgC,OAAQ,EAAC,CAAC;;QAExE;QACA,QAAQD,MAAM;UACZ,KAAK,GAAG;YACN;YACA,IAAI/B,IAAI,IAAIA,IAAI,CAACiC,MAAM,EAAE;cACvBC,MAAM,CAACC,MAAM,CAACnC,IAAI,CAACiC,MAAM,CAAC,CAACG,IAAI,CAAC,CAAC,CAACC,OAAO,CAACC,YAAY,IAAI;gBACxDjD,SAAS,CAAE,GAAEiD,YAAa,EAAC,EAAE,OAAO,CAAC;cACvC,CAAC,CAAC;YACJ,CAAC,MAAM,IAAIP,MAAM,IAAI/B,IAAI,IAAIA,IAAI,CAACgC,OAAO,EAAE;cACzC3C,SAAS,CAAE,GAAEW,IAAI,CAACgC,OAAQ,EAAC,EAAE,OAAO,CAAC;YACvC,CAAC,MAAM;cACL3C,SAAS,CAAC,uCAAuC,EAAE,OAAO,CAAC;YAC7D;YACA;UACF,KAAK,GAAG;YACN;YACAA,SAAS,CAAC,gDAAgD,EAAE,OAAO,CAAC;YACpE;UACF;UACA;YACE;YACAA,SAAS,CAACW,IAAI,CAACgC,OAAO,IAAI,+BAA+B,EAAE,OAAO,CAAC;QACvE;MACF,CAAC,MAAM,IAAI5B,KAAK,CAACmC,OAAO,EAAE;QACxB;QACAlC,OAAO,CAACD,KAAK,CAAC,uCAAuC,CAAC;QAEtDf,SAAS,CAAC,gDAAgD,EAAE,OAAO,CAAC;MACtE,CAAC,MAAM;QACL;QACAgB,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC4B,OAAO,CAAC;;QAE7D;QACA3C,SAAS,CAACe,KAAK,CAAC4B,OAAO,IAAI,+BAA+B,EAAE,OAAO,CAAC;MACtE;IACA,CAAC,SAAS;MACV5C,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;;IACAE,OAAO,CAACkD,IAAI,CAAC,WAAW,CAAC;EAC3B,CAAC;EAED,oBACErE,KAAA,CAAAsE,aAAA;IAAKC,SAAS,EAAC,2BAA2B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChC7E,KAAA,CAAAsE,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAAC,eAChD7E,KAAA,CAAAsE,aAAA;IAAKC,SAAS,EAAC,kCAAkC;IAACxC,EAAE,EAAC,KAAK;IAAAyC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrD7E,KAAA,CAAAsE,aAAA;IAAKC,SAAS,EAAC,kCAAkC;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClD7E,KAAA,CAAAsE,aAAA;IAAKC,SAAS,EAAC,uDAAuD;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpE7E,KAAA,CAAAsE,aAAA;IAAKC,SAAS,EAAC,4BAA4B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzC7E,KAAA,CAAAsE,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,WAAY,CAAC,eAChB7E,KAAA,CAAAsE,aAAA;IAAMC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7BnE,YAAY,CAACoE,GAAG,CAAC,CAACC,GAAG,EAAE3C,KAAK,kBAC3BpC,KAAA,CAAAsE,aAAA;IACEtB,GAAG,EAAEZ,KAAM;IACX4C,WAAW,EAAC,GAAG;IACfC,IAAI,EAAC,UAAU;IACflD,EAAE,EAAG,aAAYK,KAAM,EAAE;IACzBmC,SAAS,EAAC,2GAA2G;IACrHW,SAAS,EAAC,GAAG;IACbC,QAAQ,EAAG5C,CAAC,IACVJ,iBAAiB,CACfC,KAAK,EACLvB,MAAM,EACNH,YAAY,CAAC0B,KAAK,GAAG,CAAC,CAAC,EACvBG,CACF,CACD;IACDwC,GAAG,EAAEA,GAAI;IACTK,SAAS,EAAG7C,CAAC,IAAKO,aAAa,CAACP,CAAC,EAAEH,KAAK,CAAE;IAAAoC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC3C,CACF,CACG,CACH,CAAC,eACN7E,KAAA,CAAAsE,aAAA;IAAKC,SAAS,EAAC,6BAA6B;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1C7E,KAAA,CAAAsE,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,aAAc,CAAC,eAClB7E,KAAA,CAAAsE,aAAA;IAAMC,SAAS,EAAC,gBAAgB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC7BlE,mBAAmB,CAACmE,GAAG,CAAC,CAACC,GAAG,EAAE3C,KAAK,kBAClCpC,KAAA,CAAAsE,aAAA;IACEtB,GAAG,EAAEZ,KAAM;IACXL,EAAE,EAAG,oBAAmBK,KAAM,EAAE;IAChC4C,WAAW,EAAC,GAAG;IACfC,IAAI,EAAC,UAAU;IACfV,SAAS,EAAC,2GAA2G;IACrHW,SAAS,EAAC,GAAG;IACbC,QAAQ,EAAG5C,CAAC,IAAKY,2BAA2B,CAACf,KAAK,EAAEG,CAAC,CAAE;IACvD6C,SAAS,EAAG7C,CAAC,IAAKgB,oBAAoB,CAAChB,CAAC,EAAEH,KAAK,CAAE;IACjD2C,GAAG,EAAEA,GAAI;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACV,CACF,CACG,CACH,CACF,CAAC,eAGN7E,KAAA,CAAAsE,aAAA;IACEW,IAAI,EAAC,QAAQ;IACbI,OAAO,EAAE7B,oBAAqB;IAC9Be,SAAS,EAAG,iEAAgEvD,OAAO,GAAG,gCAAgC,GAAG,EACtH,EAAE;IACLsE,QAAQ,EAAEtE,OAAQ;IAAAwD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEjB7D,OAAO,iBACNhB,KAAA,CAAAsE,aAAA;IAAKC,SAAS,EAAC,uEAAuE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpF7E,KAAA,CAAAsE,aAAA;IAAKC,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAC1B,CACN,EACA7D,OAAO,GAAG,WAAW,GAAG,MACnB,CACL,CACA,CACJ,CAAC;AAEV,CAAC;AAED,eAAeR,sBAAsB"},"metadata":{},"sourceType":"module"}